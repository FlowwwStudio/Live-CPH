"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[property]/[floor]",{

/***/ "./components/SVGViewer.js":
/*!*********************************!*\
  !*** ./components/SVGViewer.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SVGViewer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction SVGViewer(param) {\n    let { property, floor } = param;\n    _s();\n    const svgContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadSVG = async ()=>{\n            try {\n                const response = await fetch(\"/svg/\".concat(property, \"/\").concat(floor, \".svg\"));\n                if (!response.ok) throw new Error(\"Failed to load SVG\");\n                const svgText = await response.text();\n                if (svgContainerRef.current) {\n                    svgContainerRef.current.innerHTML = svgText;\n                    // Process the SVG after it's loaded\n                    enhanceSVG(property, floor);\n                }\n            } catch (error) {\n                console.error(\"Error loading SVG:\", error);\n            }\n        };\n        if (property && floor) {\n            loadSVG();\n        }\n        return ()=>{\n            if (svgContainerRef.current) {\n                svgContainerRef.current.innerHTML = \"\";\n            }\n        };\n    }, [\n        property,\n        floor\n    ]);\n    // Function to enhance SVG with interactivity\n    const enhanceSVG = (property, floor)=>{\n        console.log(\"\\uD83C\\uDFAF Enhancing SVG for:\", property, floor);\n        // Find all apartment elements with data-apartment-id attribute\n        const apartmentElements = svgContainerRef.current.querySelectorAll(\"[data-apartment-id]\");\n        console.log(\"\\uD83D\\uDCCD Found apartment elements:\", apartmentElements.length);\n        apartmentElements.forEach((element, index)=>{\n            // Get existing apartment ID from data attribute\n            const apartmentId = element.getAttribute(\"data-apartment-id\");\n            console.log(\"\\uD83C\\uDFE0 Setting up apartment \".concat(index + 1, \":\"), apartmentId);\n            if (apartmentId) {\n                // Add click handler\n                element.addEventListener(\"click\", (e)=>{\n                    e.preventDefault();\n                    console.log(\"\\uD83D\\uDDB1️ Apartment clicked:\", apartmentId);\n                    sendApartmentMessage(apartmentId);\n                });\n                // Add hover handlers\n                element.addEventListener(\"mouseenter\", ()=>{\n                    console.log(\"\\uD83D\\uDC2D Mouse enter:\", apartmentId);\n                    element.style.opacity = \"0.7\";\n                    element.style.cursor = \"pointer\";\n                });\n                element.addEventListener(\"mouseleave\", ()=>{\n                    console.log(\"\\uD83D\\uDC2D Mouse leave:\", apartmentId);\n                    element.style.opacity = \"1\";\n                });\n                // Add interactive class for CSS styling\n                element.classList.add(\"interactive-apartment\");\n                // Ensure element is clickable\n                element.style.pointerEvents = \"all\";\n            }\n        });\n        // Apply CSS for interactivity\n        const style = document.createElement(\"style\");\n        style.textContent = \"\\n      .interactive-apartment {\\n        cursor: pointer !important;\\n        transition: opacity 0.3s ease, fill-opacity 0.3s ease;\\n      }\\n      .interactive-apartment:hover {\\n        opacity: 0.7 !important;\\n        fill-opacity: 0.7 !important;\\n      }\\n      [data-apartment-id] {\\n        pointer-events: all !important;\\n        cursor: pointer !important;\\n      }\\n    \";\n        svgContainerRef.current.appendChild(style);\n        console.log(\"✅ SVG enhancement complete!\");\n    };\n    // Extract apartment ID from SVG element\n    const extractApartmentId = (svgElement, property, floorNum)=>{\n        // Option 1: From data-apartment-id attribute\n        if (svgElement.dataset.apartmentId) {\n            return svgElement.dataset.apartmentId;\n        }\n        // Option 2: From class name (appartment-1 → parse to apartment ID)\n        const classMatch = Array.from(svgElement.classList).find((className)=>/appartment-\\d+|apartment-\\d+|lejlighed-\\d+/i.test(className));\n        if (classMatch) {\n            const numMatch = classMatch.match(/\\d+/);\n            if (numMatch) {\n                const apartmentNum = numMatch[0].padStart(2, \"0\");\n                // Format: STR-1-01 (Property abbreviation, floor, apartment number)\n                let propertyPrefix = \"\";\n                switch(property){\n                    case \"strandlodsvej\":\n                        propertyPrefix = \"STR\";\n                        break;\n                    case \"vesterbrogade\":\n                        propertyPrefix = \"VBG\";\n                        break;\n                    default:\n                        propertyPrefix = property.substring(0, 3).toUpperCase();\n                }\n                return \"\".concat(propertyPrefix, \"-\").concat(floorNum, \"-\").concat(apartmentNum);\n            }\n        }\n        // Option 3: From element ID if it exists\n        if (svgElement.id && /\\d+/.test(svgElement.id)) {\n            const numMatch = svgElement.id.match(/\\d+/);\n            if (numMatch) {\n                const apartmentNum = numMatch[0].padStart(2, \"0\");\n                let propertyPrefix = \"\";\n                switch(property){\n                    case \"strandlodsvej\":\n                        propertyPrefix = \"STR\";\n                        break;\n                    case \"vesterbrogade\":\n                        propertyPrefix = \"VBG\";\n                        break;\n                    default:\n                        propertyPrefix = property.substring(0, 3).toUpperCase();\n                }\n                return \"\".concat(propertyPrefix, \"-\").concat(floorNum, \"-\").concat(apartmentNum);\n            }\n        }\n        return null;\n    };\n    // Send message to Webflow\n    const sendApartmentMessage = (apartmentId)=>{\n        console.log(\"\\uD83D\\uDCE4 Sending postMessage to parent:\", {\n            type: \"openApartment\",\n            apartmentId: apartmentId\n        });\n        window.parent.postMessage({\n            type: \"openApartment\",\n            apartmentId: apartmentId\n        }, \"*\");\n        // Also log to local console for easy testing\n        console.log(\"\\uD83C\\uDF89 Apartment selected: \".concat(apartmentId));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: svgContainerRef,\n        className: \"svg-container\"\n    }, void 0, false, {\n        fileName: \"/Users/aleksanderkyhnhansen/Sites/Clients/Live-CPH/components/SVGViewer.js\",\n        lineNumber: 174,\n        columnNumber: 10\n    }, this);\n}\n_s(SVGViewer, \"mmTqLVLH8gimSlsrz03Ft249ppo=\");\n_c = SVGViewer;\nvar _c;\n$RefreshReg$(_c, \"SVGViewer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFPO0lBQ1Q7SUFFQSwwQkFBMEI7SUFDMUIsTUFBTXZCLHVCQUF1QixDQUFDTDtRQUM1QlIsUUFBUUMsR0FBRyxDQUFDLCtDQUFxQztZQUMvQ3lDLE1BQU07WUFDTmxDLGFBQWFBO1FBQ2Y7UUFFQW1DLE9BQU9DLE1BQU0sQ0FBQ0MsV0FBVyxDQUFDO1lBQ3hCSCxNQUFNO1lBQ05sQyxhQUFhQTtRQUNmLEdBQUc7UUFFSCw2Q0FBNkM7UUFDN0NSLFFBQVFDLEdBQUcsQ0FBQyxvQ0FBc0MsT0FBWk87SUFDeEM7SUFFQSxxQkFBTyw4REFBQ3NDO1FBQUlDLEtBQUszRDtRQUFpQjRDLFdBQVU7Ozs7OztBQUM5QztHQTVLd0IvQztLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL1NWR1ZpZXdlci5qcz8yZTdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTVkdWaWV3ZXIoeyBwcm9wZXJ0eSwgZmxvb3IgfSkge1xuICBjb25zdCBzdmdDb250YWluZXJSZWYgPSB1c2VSZWYobnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBsb2FkU1ZHID0gYXN5bmMgKCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL3N2Zy8ke3Byb3BlcnR5fS8ke2Zsb29yfS5zdmdgKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gbG9hZCBTVkcnKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHN2Z1RleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICAgIGlmIChzdmdDb250YWluZXJSZWYuY3VycmVudCkge1xuICAgICAgICAgIHN2Z0NvbnRhaW5lclJlZi5jdXJyZW50LmlubmVySFRNTCA9IHN2Z1RleHQ7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gUHJvY2VzcyB0aGUgU1ZHIGFmdGVyIGl0J3MgbG9hZGVkXG4gICAgICAgICAgZW5oYW5jZVNWRyhwcm9wZXJ0eSwgZmxvb3IpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsb2FkaW5nIFNWRzonLCBlcnJvcik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGlmIChwcm9wZXJ0eSAmJiBmbG9vcikge1xuICAgICAgbG9hZFNWRygpO1xuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAoc3ZnQ29udGFpbmVyUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgc3ZnQ29udGFpbmVyUmVmLmN1cnJlbnQuaW5uZXJIVE1MID0gJyc7XG4gICAgICB9XG4gICAgfTtcbiAgfSwgW3Byb3BlcnR5LCBmbG9vcl0pO1xuXG4gIC8vIEZ1bmN0aW9uIHRvIGVuaGFuY2UgU1ZHIHdpdGggaW50ZXJhY3Rpdml0eVxuICBjb25zdCBlbmhhbmNlU1ZHID0gKHByb3BlcnR5LCBmbG9vcikgPT4ge1xuICAgIGNvbnNvbGUubG9nKCfwn46vIEVuaGFuY2luZyBTVkcgZm9yOicsIHByb3BlcnR5LCBmbG9vcik7XG4gICAgXG4gICAgLy8gRmluZCBhbGwgYXBhcnRtZW50IGVsZW1lbnRzIHdpdGggZGF0YS1hcGFydG1lbnQtaWQgYXR0cmlidXRlXG4gICAgY29uc3QgYXBhcnRtZW50RWxlbWVudHMgPSBzdmdDb250YWluZXJSZWYuY3VycmVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1hcGFydG1lbnQtaWRdJyk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ/Cfk40gRm91bmQgYXBhcnRtZW50IGVsZW1lbnRzOicsIGFwYXJ0bWVudEVsZW1lbnRzLmxlbmd0aCk7XG4gICAgXG4gICAgYXBhcnRtZW50RWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICAgIC8vIEdldCBleGlzdGluZyBhcGFydG1lbnQgSUQgZnJvbSBkYXRhIGF0dHJpYnV0ZVxuICAgICAgY29uc3QgYXBhcnRtZW50SWQgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1hcGFydG1lbnQtaWQnKTtcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coYPCfj6AgU2V0dGluZyB1cCBhcGFydG1lbnQgJHtpbmRleCArIDF9OmAsIGFwYXJ0bWVudElkKTtcbiAgICAgIFxuICAgICAgaWYgKGFwYXJ0bWVudElkKSB7XG4gICAgICAgIC8vIEFkZCBjbGljayBoYW5kbGVyXG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBjb25zb2xlLmxvZygn8J+Wse+4jyBBcGFydG1lbnQgY2xpY2tlZDonLCBhcGFydG1lbnRJZCk7XG4gICAgICAgICAgc2VuZEFwYXJ0bWVudE1lc3NhZ2UoYXBhcnRtZW50SWQpO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCBob3ZlciBoYW5kbGVyc1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCAoKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ/CfkK0gTW91c2UgZW50ZXI6JywgYXBhcnRtZW50SWQpO1xuICAgICAgICAgIGVsZW1lbnQuc3R5bGUub3BhY2l0eSA9ICcwLjcnO1xuICAgICAgICAgIGVsZW1lbnQuc3R5bGUuY3Vyc29yID0gJ3BvaW50ZXInO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsICgpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygn8J+QrSBNb3VzZSBsZWF2ZTonLCBhcGFydG1lbnRJZCk7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gJzEnO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCBpbnRlcmFjdGl2ZSBjbGFzcyBmb3IgQ1NTIHN0eWxpbmdcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdpbnRlcmFjdGl2ZS1hcGFydG1lbnQnKTtcbiAgICAgICAgXG4gICAgICAgIC8vIEVuc3VyZSBlbGVtZW50IGlzIGNsaWNrYWJsZVxuICAgICAgICBlbGVtZW50LnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnYWxsJztcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIEFwcGx5IENTUyBmb3IgaW50ZXJhY3Rpdml0eVxuICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgICBzdHlsZS50ZXh0Q29udGVudCA9IGBcbiAgICAgIC5pbnRlcmFjdGl2ZS1hcGFydG1lbnQge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXIgIWltcG9ydGFudDtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2UsIGZpbGwtb3BhY2l0eSAwLjNzIGVhc2U7XG4gICAgICB9XG4gICAgICAuaW50ZXJhY3RpdmUtYXBhcnRtZW50OmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMC43ICFpbXBvcnRhbnQ7XG4gICAgICAgIGZpbGwtb3BhY2l0eTogMC43ICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgICBbZGF0YS1hcGFydG1lbnQtaWRdIHtcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IGFsbCAhaW1wb3J0YW50O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXIgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICBgO1xuICAgIHN2Z0NvbnRhaW5lclJlZi5jdXJyZW50LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICBcbiAgICBjb25zb2xlLmxvZygn4pyFIFNWRyBlbmhhbmNlbWVudCBjb21wbGV0ZSEnKTtcbiAgfTtcblxuICAvLyBFeHRyYWN0IGFwYXJ0bWVudCBJRCBmcm9tIFNWRyBlbGVtZW50XG4gIGNvbnN0IGV4dHJhY3RBcGFydG1lbnRJZCA9IChzdmdFbGVtZW50LCBwcm9wZXJ0eSwgZmxvb3JOdW0pID0+IHtcbiAgICAvLyBPcHRpb24gMTogRnJvbSBkYXRhLWFwYXJ0bWVudC1pZCBhdHRyaWJ1dGVcbiAgICBpZiAoc3ZnRWxlbWVudC5kYXRhc2V0LmFwYXJ0bWVudElkKSB7XG4gICAgICByZXR1cm4gc3ZnRWxlbWVudC5kYXRhc2V0LmFwYXJ0bWVudElkO1xuICAgIH1cbiAgICBcbiAgICAvLyBPcHRpb24gMjogRnJvbSBjbGFzcyBuYW1lIChhcHBhcnRtZW50LTEg4oaSIHBhcnNlIHRvIGFwYXJ0bWVudCBJRClcbiAgICBjb25zdCBjbGFzc01hdGNoID0gQXJyYXkuZnJvbShzdmdFbGVtZW50LmNsYXNzTGlzdCkuZmluZChjbGFzc05hbWUgPT4gXG4gICAgICAvYXBwYXJ0bWVudC1cXGQrfGFwYXJ0bWVudC1cXGQrfGxlamxpZ2hlZC1cXGQrL2kudGVzdChjbGFzc05hbWUpXG4gICAgKTtcbiAgICBcbiAgICBpZiAoY2xhc3NNYXRjaCkge1xuICAgICAgY29uc3QgbnVtTWF0Y2ggPSBjbGFzc01hdGNoLm1hdGNoKC9cXGQrLyk7XG4gICAgICBpZiAobnVtTWF0Y2gpIHtcbiAgICAgICAgY29uc3QgYXBhcnRtZW50TnVtID0gbnVtTWF0Y2hbMF0ucGFkU3RhcnQoMiwgJzAnKTtcbiAgICAgICAgLy8gRm9ybWF0OiBTVFItMS0wMSAoUHJvcGVydHkgYWJicmV2aWF0aW9uLCBmbG9vciwgYXBhcnRtZW50IG51bWJlcilcbiAgICAgICAgbGV0IHByb3BlcnR5UHJlZml4ID0gJyc7XG4gICAgICAgIFxuICAgICAgICBzd2l0Y2gocHJvcGVydHkpIHtcbiAgICAgICAgICBjYXNlICdzdHJhbmRsb2RzdmVqJzpcbiAgICAgICAgICAgIHByb3BlcnR5UHJlZml4ID0gJ1NUUic7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlICd2ZXN0ZXJicm9nYWRlJzpcbiAgICAgICAgICAgIHByb3BlcnR5UHJlZml4ID0gJ1ZCRyc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcHJvcGVydHlQcmVmaXggPSBwcm9wZXJ0eS5zdWJzdHJpbmcoMCwgMykudG9VcHBlckNhc2UoKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGAke3Byb3BlcnR5UHJlZml4fS0ke2Zsb29yTnVtfS0ke2FwYXJ0bWVudE51bX1gO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyBPcHRpb24gMzogRnJvbSBlbGVtZW50IElEIGlmIGl0IGV4aXN0c1xuICAgIGlmIChzdmdFbGVtZW50LmlkICYmIC9cXGQrLy50ZXN0KHN2Z0VsZW1lbnQuaWQpKSB7XG4gICAgICBjb25zdCBudW1NYXRjaCA9IHN2Z0VsZW1lbnQuaWQubWF0Y2goL1xcZCsvKTtcbiAgICAgIGlmIChudW1NYXRjaCkge1xuICAgICAgICBjb25zdCBhcGFydG1lbnROdW0gPSBudW1NYXRjaFswXS5wYWRTdGFydCgyLCAnMCcpO1xuICAgICAgICBsZXQgcHJvcGVydHlQcmVmaXggPSAnJztcbiAgICAgICAgXG4gICAgICAgIHN3aXRjaChwcm9wZXJ0eSkge1xuICAgICAgICAgIGNhc2UgJ3N0cmFuZGxvZHN2ZWonOlxuICAgICAgICAgICAgcHJvcGVydHlQcmVmaXggPSAnU1RSJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ3Zlc3RlcmJyb2dhZGUnOlxuICAgICAgICAgICAgcHJvcGVydHlQcmVmaXggPSAnVkJHJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBwcm9wZXJ0eVByZWZpeCA9IHByb3BlcnR5LnN1YnN0cmluZygwLCAzKS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gYCR7cHJvcGVydHlQcmVmaXh9LSR7Zmxvb3JOdW19LSR7YXBhcnRtZW50TnVtfWA7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIC8vIFNlbmQgbWVzc2FnZSB0byBXZWJmbG93XG4gIGNvbnN0IHNlbmRBcGFydG1lbnRNZXNzYWdlID0gKGFwYXJ0bWVudElkKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ/Cfk6QgU2VuZGluZyBwb3N0TWVzc2FnZSB0byBwYXJlbnQ6Jywge1xuICAgICAgdHlwZTogJ29wZW5BcGFydG1lbnQnLFxuICAgICAgYXBhcnRtZW50SWQ6IGFwYXJ0bWVudElkXG4gICAgfSk7XG4gICAgXG4gICAgd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSh7XG4gICAgICB0eXBlOiAnb3BlbkFwYXJ0bWVudCcsXG4gICAgICBhcGFydG1lbnRJZDogYXBhcnRtZW50SWRcbiAgICB9LCAnKicpO1xuICAgIFxuICAgIC8vIEFsc28gbG9nIHRvIGxvY2FsIGNvbnNvbGUgZm9yIGVhc3kgdGVzdGluZ1xuICAgIGNvbnNvbGUubG9nKGDwn46JIEFwYXJ0bWVudCBzZWxlY3RlZDogJHthcGFydG1lbnRJZH1gKTtcbiAgfTtcblxuICByZXR1cm4gPGRpdiByZWY9e3N2Z0NvbnRhaW5lclJlZn0gY2xhc3NOYW1lPVwic3ZnLWNvbnRhaW5lclwiPjwvZGl2Pjtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJTVkdWaWV3ZXIiLCJwcm9wZXJ0eSIsImZsb29yIiwic3ZnQ29udGFpbmVyUmVmIiwibG9hZFNWRyIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsIkVycm9yIiwic3ZnVGV4dCIsInRleHQiLCJjdXJyZW50IiwiaW5uZXJIVE1MIiwiZW5oYW5jZVNWRyIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImFwYXJ0bWVudEVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmd0aCIsImZvckVhY2giLCJlbGVtZW50IiwiaW5kZXgiLCJhcGFydG1lbnRJZCIsImdldEF0dHJpYnV0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJzZW5kQXBhcnRtZW50TWVzc2FnZSIsInN0eWxlIiwib3BhY2l0eSIsImN1cnNvciIsImNsYXNzTGlzdCIsImFkZCIsInBvaW50ZXJFdmVudHMiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImFwcGVuZENoaWxkIiwiZXh0cmFjdEFwYXJ0bWVudElkIiwic3ZnRWxlbWVudCIsImZsb29yTnVtIiwiZGF0YXNldCIsImNsYXNzTWF0Y2giLCJBcnJheSIsImZyb20iLCJmaW5kIiwiY2xhc3NOYW1lIiwidGVzdCIsIm51bU1hdGNoIiwibWF0Y2giLCJhcGFydG1lbnROdW0iLCJwYWRTdGFydCIsInByb3BlcnR5UHJlZml4Iiwic3Vic3RyaW5nIiwidG9VcHBlckNhc2UiLCJpZCIsInR5cGUiLCJ3aW5kb3ciLCJwYXJlbnQiLCJwb3N0TWVzc2FnZSIsImRpdiIsInJlZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/SVGViewer.js\n"));

/***/ })

});