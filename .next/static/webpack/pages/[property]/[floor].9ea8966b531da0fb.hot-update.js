"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[property]/[floor]",{

/***/ "./components/SVGViewer.js":
/*!*********************************!*\
  !*** ./components/SVGViewer.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SVGViewer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction SVGViewer(param) {\n    let { property, floor } = param;\n    _s();\n    const svgContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadSVG = async ()=>{\n            try {\n                console.log(\"\\uD83D\\uDD04 Loading SVG: /svg/\".concat(property, \"/\").concat(floor, \".svg\"));\n                const response = await fetch(\"/svg/\".concat(property, \"/\").concat(floor, \".svg\"));\n                if (!response.ok) throw new Error(\"Failed to load SVG\");\n                const svgText = await response.text();\n                console.log(\"\\uD83D\\uDCC4 SVG loaded successfully, length:\", svgText.length);\n                if (svgContainerRef.current) {\n                    svgContainerRef.current.innerHTML = svgText;\n                    console.log(\"\\uD83C\\uDFA8 SVG inserted into DOM\");\n                    // Small delay to ensure DOM is ready\n                    setTimeout(()=>{\n                        enhanceSVG(property, floor);\n                    }, 100);\n                }\n            } catch (error) {\n                console.error(\"❌ Error loading SVG:\", error);\n            }\n        };\n        if (property && floor) {\n            loadSVG();\n        }\n        return ()=>{\n            if (svgContainerRef.current) {\n                svgContainerRef.current.innerHTML = \"\";\n            }\n        };\n    }, [\n        property,\n        floor\n    ]);\n    // Function to enhance SVG with interactivity\n    const enhanceSVG = (property, floor)=>{\n        console.log(\"\\uD83C\\uDFAF Enhancing SVG for:\", property, floor);\n        // Find all apartment elements with data-apartment-id attribute\n        const apartmentElements = svgContainerRef.current.querySelectorAll(\"[data-apartment-id]\");\n        console.log(\"\\uD83D\\uDCCD Found apartment elements:\", apartmentElements.length);\n        apartmentElements.forEach((element, index)=>{\n            // Get existing apartment ID from data attribute\n            const apartmentId = element.getAttribute(\"data-apartment-id\");\n            console.log(\"\\uD83C\\uDFE0 Setting up apartment \".concat(index + 1, \":\"), apartmentId);\n            if (apartmentId) {\n                // Store original opacity for restoration\n                const computedStyle = window.getComputedStyle(element);\n                const originalOpacity = computedStyle.opacity;\n                console.log(\"\\uD83C\\uDFA8 Original opacity for \".concat(apartmentId, \":\"), originalOpacity);\n                // Add click handler\n                element.addEventListener(\"click\", (e)=>{\n                    e.preventDefault();\n                    console.log(\"\\uD83D\\uDDB1️ Apartment clicked:\", apartmentId);\n                    sendApartmentMessage(apartmentId);\n                });\n                // Add hover handlers\n                element.addEventListener(\"mouseenter\", ()=>{\n                    console.log(\"\\uD83D\\uDC2D Mouse enter:\", apartmentId);\n                    // Make visible on hover (override CSS opacity: 0)\n                    element.style.opacity = \"0.7\";\n                    element.style.cursor = \"pointer\";\n                });\n                element.addEventListener(\"mouseleave\", ()=>{\n                    console.log(\"\\uD83D\\uDC2D Mouse leave:\", apartmentId);\n                    // Restore original opacity (which might be 0 from CSS)\n                    element.style.opacity = originalOpacity;\n                });\n                // Add interactive class for CSS styling\n                element.classList.add(\"interactive-apartment\");\n                // Ensure element is clickable even if opacity is 0\n                element.style.pointerEvents = \"all\";\n            }\n        });\n        // Apply CSS for interactivity\n        const style = document.createElement(\"style\");\n        style.textContent = \"\\n      .interactive-apartment {\\n        cursor: pointer !important;\\n        transition: opacity 0.3s ease;\\n      }\\n      [data-apartment-id] {\\n        pointer-events: all !important;\\n        cursor: pointer !important;\\n        transition: opacity 0.3s ease;\\n      }\\n      /* Ensure apartments are always interactive even if hidden */\\n      [data-apartment-id]:hover {\\n        cursor: pointer !important;\\n      }\\n    \";\n        svgContainerRef.current.appendChild(style);\n        console.log(\"✅ SVG enhancement complete!\");\n    };\n    // Extract apartment ID from SVG element\n    const extractApartmentId = (svgElement, property, floorNum)=>{\n        // Option 1: From data-apartment-id attribute\n        if (svgElement.dataset.apartmentId) {\n            return svgElement.dataset.apartmentId;\n        }\n        // Option 2: From class name (appartment-1 → parse to apartment ID)\n        const classMatch = Array.from(svgElement.classList).find((className)=>/appartment-\\d+|apartment-\\d+|lejlighed-\\d+/i.test(className));\n        if (classMatch) {\n            const numMatch = classMatch.match(/\\d+/);\n            if (numMatch) {\n                const apartmentNum = numMatch[0].padStart(2, \"0\");\n                // Format: STR-1-01 (Property abbreviation, floor, apartment number)\n                let propertyPrefix = \"\";\n                switch(property){\n                    case \"strandlodsvej\":\n                        propertyPrefix = \"STR\";\n                        break;\n                    case \"vesterbrogade\":\n                        propertyPrefix = \"VBG\";\n                        break;\n                    default:\n                        propertyPrefix = property.substring(0, 3).toUpperCase();\n                }\n                return \"\".concat(propertyPrefix, \"-\").concat(floorNum, \"-\").concat(apartmentNum);\n            }\n        }\n        // Option 3: From element ID if it exists\n        if (svgElement.id && /\\d+/.test(svgElement.id)) {\n            const numMatch = svgElement.id.match(/\\d+/);\n            if (numMatch) {\n                const apartmentNum = numMatch[0].padStart(2, \"0\");\n                let propertyPrefix = \"\";\n                switch(property){\n                    case \"strandlodsvej\":\n                        propertyPrefix = \"STR\";\n                        break;\n                    case \"vesterbrogade\":\n                        propertyPrefix = \"VBG\";\n                        break;\n                    default:\n                        propertyPrefix = property.substring(0, 3).toUpperCase();\n                }\n                return \"\".concat(propertyPrefix, \"-\").concat(floorNum, \"-\").concat(apartmentNum);\n            }\n        }\n        return null;\n    };\n    // Send message to Webflow\n    const sendApartmentMessage = (apartmentId)=>{\n        console.log(\"\\uD83D\\uDCE4 Sending postMessage to parent:\", {\n            type: \"openApartment\",\n            apartmentId: apartmentId\n        });\n        window.parent.postMessage({\n            type: \"openApartment\",\n            apartmentId: apartmentId\n        }, \"*\");\n        // Also log to local console for easy testing\n        console.log(\"\\uD83C\\uDF89 Apartment selected: \".concat(apartmentId));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: svgContainerRef,\n        className: \"svg-container\"\n    }, void 0, false, {\n        fileName: \"/Users/aleksanderkyhnhansen/Sites/Clients/Live-CPH/components/SVGViewer.js\",\n        lineNumber: 189,\n        columnNumber: 10\n    }, this);\n}\n_s(SVGViewer, \"mmTqLVLH8gimSlsrz03Ft249ppo=\");\n_c = SVGViewer;\nvar _c;\n$RefreshReg$(_c, \"SVGViewer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/SVGViewer.js\n"));

/***/ })

});