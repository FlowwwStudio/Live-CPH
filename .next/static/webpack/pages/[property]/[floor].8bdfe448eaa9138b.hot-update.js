"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[property]/[floor]",{

/***/ "./components/SVGViewer.js":
/*!*********************************!*\
  !*** ./components/SVGViewer.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SVGViewer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction SVGViewer(param) {\n    let { property, floor } = param;\n    _s();\n    const svgContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadSVG = async ()=>{\n            try {\n                const response = await fetch(\"/svg/\".concat(property, \"/\").concat(floor, \".svg\"));\n                if (!response.ok) throw new Error(\"Failed to load SVG\");\n                const svgText = await response.text();\n                if (svgContainerRef.current) {\n                    svgContainerRef.current.innerHTML = svgText;\n                    // Process the SVG after it's loaded\n                    enhanceSVG(property, floor);\n                }\n            } catch (error) {\n                console.error(\"Error loading SVG:\", error);\n            }\n        };\n        if (property && floor) {\n            loadSVG();\n        }\n        return ()=>{\n            if (svgContainerRef.current) {\n                svgContainerRef.current.innerHTML = \"\";\n            }\n        };\n    }, [\n        property,\n        floor\n    ]);\n    // Function to enhance SVG with interactivity\n    const enhanceSVG = (property, floor)=>{\n        // Normalized property name for ID formatting\n        const normalizedProperty = property.toLowerCase();\n        const floorNum = floor.replace(/\\D/g, \"\");\n        // Find all apartment elements in SVG\n        // Look for text elements with class \"st8\" that contain apartment numbers\n        const apartmentElements = svgContainerRef.current.querySelectorAll(\"text.st8\");\n        apartmentElements.forEach((element)=>{\n            // Extract apartment ID\n            const apartmentId = extractApartmentId(element, normalizedProperty, floorNum);\n            if (apartmentId) {\n                // Store the ID as a data attribute\n                element.setAttribute(\"data-apartment-id\", apartmentId);\n                // Add click handler\n                element.addEventListener(\"click\", ()=>{\n                    sendApartmentMessage(apartmentId);\n                });\n                // Add hover effects via class\n                element.classList.add(\"interactive-apartment\");\n            }\n        });\n        // Apply CSS for interactivity\n        const style = document.createElement(\"style\");\n        style.textContent = \"\\n      .interactive-apartment {\\n        cursor: pointer;\\n        transition: fill-opacity 0.3s ease;\\n      }\\n      .interactive-apartment:hover {\\n        fill-opacity: 0.7;\\n      }\\n    \";\n        svgContainerRef.current.appendChild(style);\n    };\n    // Extract apartment ID from SVG element\n    const extractApartmentId = (svgElement, property, floorNum)=>{\n        var _svgElement_textContent;\n        // Get the text content from the element (like \"1/1\", \"1/2\", etc.)\n        const textContent = (_svgElement_textContent = svgElement.textContent) === null || _svgElement_textContent === void 0 ? void 0 : _svgElement_textContent.trim();\n        if (textContent && /^\\d+\\/\\d+$/.test(textContent)) {\n            // Extract apartment number from format \"1/1\" â†’ \"01\"\n            const apartmentNum = textContent.split(\"/\")[1].padStart(2, \"0\");\n            // Generate property prefix\n            let propertyPrefix = \"\";\n            switch(property){\n                case \"strandlodsvej\":\n                    propertyPrefix = \"STR\";\n                    break;\n                case \"vesterbrogade\":\n                    propertyPrefix = \"VBG\";\n                    break;\n                default:\n                    propertyPrefix = property.substring(0, 3).toUpperCase();\n            }\n            return \"\".concat(propertyPrefix, \"-\").concat(floorNum, \"-\").concat(apartmentNum);\n        }\n        return null;\n    };\n    // Send message to Webflow\n    const sendApartmentMessage = (apartmentId)=>{\n        window.parent.postMessage({\n            type: \"openApartment\",\n            apartmentId: apartmentId\n        }, \"*\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: svgContainerRef,\n        className: \"svg-container\"\n    }, void 0, false, {\n        fileName: \"/Users/aleksanderkyhnhansen/Sites/Clients/Live-CPH/components/SVGViewer.js\",\n        lineNumber: 113,\n        columnNumber: 10\n    }, this);\n}\n_s(SVGViewer, \"mmTqLVLH8gimSlsrz03Ft249ppo=\");\n_c = SVGViewer;\nvar _c;\n$RefreshReg$(_c, \"SVGViewer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QjtJQUMxQixNQUFNWCx1QkFBdUIsQ0FBQ0o7UUFDNUJxQixPQUFPQyxNQUFNLENBQUNDLFdBQVcsQ0FBQztZQUN4QkMsTUFBTTtZQUNOeEIsYUFBYUE7UUFDZixHQUFHO0lBQ0w7SUFFQSxxQkFBTyw4REFBQ3lCO1FBQUlDLEtBQUsvQztRQUFpQmdELFdBQVU7Ozs7OztBQUM5QztHQS9Hd0JuRDtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL1NWR1ZpZXdlci5qcz8yZTdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTVkdWaWV3ZXIoeyBwcm9wZXJ0eSwgZmxvb3IgfSkge1xuICBjb25zdCBzdmdDb250YWluZXJSZWYgPSB1c2VSZWYobnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBsb2FkU1ZHID0gYXN5bmMgKCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL3N2Zy8ke3Byb3BlcnR5fS8ke2Zsb29yfS5zdmdgKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gbG9hZCBTVkcnKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHN2Z1RleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICAgIGlmIChzdmdDb250YWluZXJSZWYuY3VycmVudCkge1xuICAgICAgICAgIHN2Z0NvbnRhaW5lclJlZi5jdXJyZW50LmlubmVySFRNTCA9IHN2Z1RleHQ7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gUHJvY2VzcyB0aGUgU1ZHIGFmdGVyIGl0J3MgbG9hZGVkXG4gICAgICAgICAgZW5oYW5jZVNWRyhwcm9wZXJ0eSwgZmxvb3IpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsb2FkaW5nIFNWRzonLCBlcnJvcik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGlmIChwcm9wZXJ0eSAmJiBmbG9vcikge1xuICAgICAgbG9hZFNWRygpO1xuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAoc3ZnQ29udGFpbmVyUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgc3ZnQ29udGFpbmVyUmVmLmN1cnJlbnQuaW5uZXJIVE1MID0gJyc7XG4gICAgICB9XG4gICAgfTtcbiAgfSwgW3Byb3BlcnR5LCBmbG9vcl0pO1xuXG4gIC8vIEZ1bmN0aW9uIHRvIGVuaGFuY2UgU1ZHIHdpdGggaW50ZXJhY3Rpdml0eVxuICBjb25zdCBlbmhhbmNlU1ZHID0gKHByb3BlcnR5LCBmbG9vcikgPT4ge1xuICAgIC8vIE5vcm1hbGl6ZWQgcHJvcGVydHkgbmFtZSBmb3IgSUQgZm9ybWF0dGluZ1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRQcm9wZXJ0eSA9IHByb3BlcnR5LnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgZmxvb3JOdW0gPSBmbG9vci5yZXBsYWNlKC9cXEQvZywgJycpO1xuICAgIFxuICAgIC8vIEZpbmQgYWxsIGFwYXJ0bWVudCBlbGVtZW50cyBpbiBTVkdcbiAgICAvLyBMb29rIGZvciB0ZXh0IGVsZW1lbnRzIHdpdGggY2xhc3MgXCJzdDhcIiB0aGF0IGNvbnRhaW4gYXBhcnRtZW50IG51bWJlcnNcbiAgICBjb25zdCBhcGFydG1lbnRFbGVtZW50cyA9IHN2Z0NvbnRhaW5lclJlZi5jdXJyZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3RleHQuc3Q4Jyk7XG4gICAgXG4gICAgYXBhcnRtZW50RWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgIC8vIEV4dHJhY3QgYXBhcnRtZW50IElEXG4gICAgICBjb25zdCBhcGFydG1lbnRJZCA9IGV4dHJhY3RBcGFydG1lbnRJZChlbGVtZW50LCBub3JtYWxpemVkUHJvcGVydHksIGZsb29yTnVtKTtcbiAgICAgIFxuICAgICAgaWYgKGFwYXJ0bWVudElkKSB7XG4gICAgICAgIC8vIFN0b3JlIHRoZSBJRCBhcyBhIGRhdGEgYXR0cmlidXRlXG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLWFwYXJ0bWVudC1pZCcsIGFwYXJ0bWVudElkKTtcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCBjbGljayBoYW5kbGVyXG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgc2VuZEFwYXJ0bWVudE1lc3NhZ2UoYXBhcnRtZW50SWQpO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCBob3ZlciBlZmZlY3RzIHZpYSBjbGFzc1xuICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2ludGVyYWN0aXZlLWFwYXJ0bWVudCcpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gQXBwbHkgQ1NTIGZvciBpbnRlcmFjdGl2aXR5XG4gICAgY29uc3Qgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgIHN0eWxlLnRleHRDb250ZW50ID0gYFxuICAgICAgLmludGVyYWN0aXZlLWFwYXJ0bWVudCB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgdHJhbnNpdGlvbjogZmlsbC1vcGFjaXR5IDAuM3MgZWFzZTtcbiAgICAgIH1cbiAgICAgIC5pbnRlcmFjdGl2ZS1hcGFydG1lbnQ6aG92ZXIge1xuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuNztcbiAgICAgIH1cbiAgICBgO1xuICAgIHN2Z0NvbnRhaW5lclJlZi5jdXJyZW50LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfTtcblxuICAvLyBFeHRyYWN0IGFwYXJ0bWVudCBJRCBmcm9tIFNWRyBlbGVtZW50XG4gIGNvbnN0IGV4dHJhY3RBcGFydG1lbnRJZCA9IChzdmdFbGVtZW50LCBwcm9wZXJ0eSwgZmxvb3JOdW0pID0+IHtcbiAgICAvLyBHZXQgdGhlIHRleHQgY29udGVudCBmcm9tIHRoZSBlbGVtZW50IChsaWtlIFwiMS8xXCIsIFwiMS8yXCIsIGV0Yy4pXG4gICAgY29uc3QgdGV4dENvbnRlbnQgPSBzdmdFbGVtZW50LnRleHRDb250ZW50Py50cmltKCk7XG4gICAgXG4gICAgaWYgKHRleHRDb250ZW50ICYmIC9eXFxkK1xcL1xcZCskLy50ZXN0KHRleHRDb250ZW50KSkge1xuICAgICAgLy8gRXh0cmFjdCBhcGFydG1lbnQgbnVtYmVyIGZyb20gZm9ybWF0IFwiMS8xXCIg4oaSIFwiMDFcIlxuICAgICAgY29uc3QgYXBhcnRtZW50TnVtID0gdGV4dENvbnRlbnQuc3BsaXQoJy8nKVsxXS5wYWRTdGFydCgyLCAnMCcpO1xuICAgICAgXG4gICAgICAvLyBHZW5lcmF0ZSBwcm9wZXJ0eSBwcmVmaXhcbiAgICAgIGxldCBwcm9wZXJ0eVByZWZpeCA9ICcnO1xuICAgICAgc3dpdGNoKHByb3BlcnR5KSB7XG4gICAgICAgIGNhc2UgJ3N0cmFuZGxvZHN2ZWonOlxuICAgICAgICAgIHByb3BlcnR5UHJlZml4ID0gJ1NUUic7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3Zlc3RlcmJyb2dhZGUnOlxuICAgICAgICAgIHByb3BlcnR5UHJlZml4ID0gJ1ZCRyc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcHJvcGVydHlQcmVmaXggPSBwcm9wZXJ0eS5zdWJzdHJpbmcoMCwgMykudG9VcHBlckNhc2UoKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIGAke3Byb3BlcnR5UHJlZml4fS0ke2Zsb29yTnVtfS0ke2FwYXJ0bWVudE51bX1gO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICAvLyBTZW5kIG1lc3NhZ2UgdG8gV2ViZmxvd1xuICBjb25zdCBzZW5kQXBhcnRtZW50TWVzc2FnZSA9IChhcGFydG1lbnRJZCkgPT4ge1xuICAgIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2Uoe1xuICAgICAgdHlwZTogJ29wZW5BcGFydG1lbnQnLFxuICAgICAgYXBhcnRtZW50SWQ6IGFwYXJ0bWVudElkXG4gICAgfSwgJyonKTtcbiAgfTtcblxuICByZXR1cm4gPGRpdiByZWY9e3N2Z0NvbnRhaW5lclJlZn0gY2xhc3NOYW1lPVwic3ZnLWNvbnRhaW5lclwiPjwvZGl2Pjtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJTVkdWaWV3ZXIiLCJwcm9wZXJ0eSIsImZsb29yIiwic3ZnQ29udGFpbmVyUmVmIiwibG9hZFNWRyIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsIkVycm9yIiwic3ZnVGV4dCIsInRleHQiLCJjdXJyZW50IiwiaW5uZXJIVE1MIiwiZW5oYW5jZVNWRyIsImVycm9yIiwiY29uc29sZSIsIm5vcm1hbGl6ZWRQcm9wZXJ0eSIsInRvTG93ZXJDYXNlIiwiZmxvb3JOdW0iLCJyZXBsYWNlIiwiYXBhcnRtZW50RWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJhcGFydG1lbnRJZCIsImV4dHJhY3RBcGFydG1lbnRJZCIsInNldEF0dHJpYnV0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJzZW5kQXBhcnRtZW50TWVzc2FnZSIsImNsYXNzTGlzdCIsImFkZCIsInN0eWxlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidGV4dENvbnRlbnQiLCJhcHBlbmRDaGlsZCIsInN2Z0VsZW1lbnQiLCJ0cmltIiwidGVzdCIsImFwYXJ0bWVudE51bSIsInNwbGl0IiwicGFkU3RhcnQiLCJwcm9wZXJ0eVByZWZpeCIsInN1YnN0cmluZyIsInRvVXBwZXJDYXNlIiwid2luZG93IiwicGFyZW50IiwicG9zdE1lc3NhZ2UiLCJ0eXBlIiwiZGl2IiwicmVmIiwiY2xhc3NOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/SVGViewer.js\n"));

/***/ })

});