function initAdvancedFormValidation(){const forms=document.querySelectorAll("[data-form-validate]");forms.forEach(formContainer=>{const startTime=(new Date).getTime(),form=formContainer.querySelector("form");if(!form)return;const validateFields=form.querySelectorAll("[data-validate]"),dataSubmit=form.querySelector("[data-submit]");if(!dataSubmit)return;const realSubmitInput=dataSubmit.querySelector('input[type="submit"]');function isSpam(){const currentTime=(new Date).getTime();return currentTime-startTime<5e3}function validateAndStartLiveValidationForAll(){let allValid=!0,firstInvalidField=null;return validateFields.forEach((function(fieldGroup){const input=fieldGroup.querySelector("input, textarea, select"),radioCheckGroup=fieldGroup.querySelector("[data-radiocheck-group]");if(input||radioCheckGroup){if(input&&(input.__validationStarted=!0),radioCheckGroup){radioCheckGroup.__validationStarted=!0;const inputs=radioCheckGroup.querySelectorAll('input[type="radio"], input[type="checkbox"]');inputs.forEach((function(input){input.__validationStarted=!0}))}updateFieldStatus(fieldGroup),isValid(fieldGroup)||(allValid=!1,firstInvalidField||(firstInvalidField=input||radioCheckGroup.querySelector("input")))}})),!allValid&&firstInvalidField&&firstInvalidField.focus(),allValid}function isValid(fieldGroup){const radioCheckGroup=fieldGroup.querySelector("[data-radiocheck-group]");if(radioCheckGroup){const inputs=radioCheckGroup.querySelectorAll('input[type="radio"], input[type="checkbox"]'),checkedInputs=radioCheckGroup.querySelectorAll("input:checked"),min=parseInt(radioCheckGroup.getAttribute("min"))||1,max=parseInt(radioCheckGroup.getAttribute("max"))||inputs.length,checkedCount=checkedInputs.length;return"radio"===inputs[0].type?checkedCount>=1:1===inputs.length?inputs[0].checked:checkedCount>=min&&checkedCount<=max}{const input=fieldGroup.querySelector("input, textarea, select");if(!input)return!1;let valid=!0;const min=parseInt(input.getAttribute("min"))||0,max=parseInt(input.getAttribute("max"))||1/0,value=input.value.trim(),length=value.length;if("select"===input.tagName.toLowerCase())""!==value&&"disabled"!==value&&"null"!==value&&"false"!==value||(valid=!1);else if("email"===input.type){const emailPattern=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;valid=emailPattern.test(value)}else input.hasAttribute("min")&&length<min&&(valid=!1),input.hasAttribute("max")&&length>max&&(valid=!1);return valid}}function updateFieldStatus(fieldGroup){const radioCheckGroup=fieldGroup.querySelector("[data-radiocheck-group]");if(radioCheckGroup){const inputs=radioCheckGroup.querySelectorAll('input[type="radio"], input[type="checkbox"]'),checkedInputs=radioCheckGroup.querySelectorAll("input:checked");checkedInputs.length>0?fieldGroup.classList.add("is--filled"):fieldGroup.classList.remove("is--filled");const valid=isValid(fieldGroup);if(valid)fieldGroup.classList.add("is--success"),fieldGroup.classList.remove("is--error");else{fieldGroup.classList.remove("is--success");const anyInputValidationStarted=Array.from(inputs).some(input=>input.__validationStarted);anyInputValidationStarted?fieldGroup.classList.add("is--error"):fieldGroup.classList.remove("is--error")}}else{const input=fieldGroup.querySelector("input, textarea, select");if(!input)return;const value=input.value.trim();value?fieldGroup.classList.add("is--filled"):fieldGroup.classList.remove("is--filled");const valid=isValid(fieldGroup);valid?(fieldGroup.classList.add("is--success"),fieldGroup.classList.remove("is--error")):(fieldGroup.classList.remove("is--success"),input.__validationStarted?fieldGroup.classList.add("is--error"):fieldGroup.classList.remove("is--error"))}}realSubmitInput&&(validateFields.forEach((function(fieldGroup){const select=fieldGroup.querySelector("select");if(select){const options=select.querySelectorAll("option");options.forEach((function(option){""!==option.value&&"disabled"!==option.value&&"null"!==option.value&&"false"!==option.value||option.setAttribute("disabled","disabled")}))}})),validateFields.forEach((function(fieldGroup){const input=fieldGroup.querySelector("input, textarea, select"),radioCheckGroup=fieldGroup.querySelector("[data-radiocheck-group]");if(radioCheckGroup){const inputs=radioCheckGroup.querySelectorAll('input[type="radio"], input[type="checkbox"]');inputs.forEach((function(input){input.__validationStarted=!1,input.addEventListener("change",(function(){requestAnimationFrame((function(){if(!input.__validationStarted){const checkedCount=radioCheckGroup.querySelectorAll("input:checked").length,min=parseInt(radioCheckGroup.getAttribute("min"))||1;checkedCount>=min&&(input.__validationStarted=!0)}input.__validationStarted&&updateFieldStatus(fieldGroup)}))})),input.addEventListener("blur",(function(){input.__validationStarted=!0,updateFieldStatus(fieldGroup)}))}))}else input&&(input.__validationStarted=!1,"select"===input.tagName.toLowerCase()?input.addEventListener("change",(function(){input.__validationStarted=!0,updateFieldStatus(fieldGroup)})):(input.addEventListener("input",(function(){const value=input.value.trim(),length=value.length,min=parseInt(input.getAttribute("min"))||0,max=parseInt(input.getAttribute("max"))||1/0;input.__validationStarted||("email"===input.type?isValid(fieldGroup)&&(input.__validationStarted=!0):(input.hasAttribute("min")&&length>=min||input.hasAttribute("max")&&length<=max)&&(input.__validationStarted=!0)),input.__validationStarted&&updateFieldStatus(fieldGroup)})),input.addEventListener("blur",(function(){input.__validationStarted=!0,updateFieldStatus(fieldGroup)}))))})),dataSubmit.addEventListener("click",(function(){if(validateAndStartLiveValidationForAll()){if(isSpam())return void alert("Form submitted too quickly. Please try again.");realSubmitInput.click()}})),form.addEventListener("keydown",(function(event){if("Enter"===event.key&&"TEXTAREA"!==event.target.tagName&&(event.preventDefault(),validateAndStartLiveValidationForAll())){if(isSpam())return void alert("Form submitted too quickly. Please try again.");realSubmitInput.click()}})))})}document.addEventListener("DOMContentLoaded",()=>{initAdvancedFormValidation()});